{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
            "Standard_LRS",
            "Standard_GRS",
            "Standard_ZRS",
            "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },

        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "defaultCapacity": {
            "type": "Int",
            "defaultValue": 5,
            "metadata": {
            "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
            }
        },

        "minimumCapacity": {
            "type": "Int",
            "defaultValue": 2,
            "metadata": {
                "description": "The minimum capacity. Autoscale engine will ensure the instance count is at least this value"
            }
        },

        "maximumCapacity": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "The maximum capacity. Autoscale engine will preventively set the instance count to be this value if it can not find any metric data"
            }
        }, 

        "metricName": {
            "type": "string",
            "defaultValue": "CpuPercentage",
            "metadata": {
                "description": "The metric name"
            }
        },
        "metricThresholdToScaleOut": {
        "type": "Int",
        "defaultValue": 60,
        "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
        }
        },
        "metricThresholdToScaleIn": {
        "type": "Int",
        "defaultValue": 20,
        "metadata": {
            "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
        }
        },
        "changePercentScaleOut": {
        "type": "Int",
        "defaultValue": 20,
        "metadata": {
            "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
        }
        },
        "changePercentScaleIn": {
        "type": "Int",
        "defaultValue": 10,
        "metadata": {
            "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
        }
        },
        "autoscaleEnabled": {
        "type": "Bool",
        "metadata": {
            "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
        }
        }

        
    },
    "functions": [],
    "variables": {
        "webappOne": "lemolamu",
        "onefunctionapp": "lamulemo",
        "storageAccountName": "[concat('store', uniqueString(resourceGroup().location))]",
        "appPlanName":"[concat('ASP-', uniqueString(resourceGroup().location))]",
        "appInsightOne": "[toLower(concat(variables('onefunctionapp'), uniqueString(resourceGroup().id)))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "appPlanSettings": "[concat(toLower(variables('appPlanName')), '_settings')]",
        "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', variables('appPlanName'))]"
    
     },
    "resources": [
        {
           
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('onefunctionapp')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
            "[variables('storageAccountId')]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightOne'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('appPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                    {
                        "name": "AzureWebJobsDashboard",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[toLower(variables('onefunctionapp'))]"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~2"
                    },
                    {
                        "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                        "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightOne')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                        "name": "FUNCTIONS_WORKER_RUNTIME",
                        "value": "dotnet"
                    }
                    ]
                }
            }
            
        },

          {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name" : "[variables('webappOne')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                    "[resourceId('Microsoft.insights/components', variables('appInsightOne'))]",
                    "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                    "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]"
            ],

            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]"
            }

        },

        {
            "name": "[variables('appInsightOne')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
            }
           
        },


        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location" : "[parameters('location')]",
            "sku": {
                "name":"[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {}
            

        },

       {
           "name": "[variables('appPlanName')]",
           "type": "Microsoft.Web/serverfarms",
           "apiVersion": "2018-02-01",
           "location": "[parameters('location')]",
           "sku": {
               "name": "S1",
               "tier": "Standard",
               "family": "S",
               "capacity": 1
           },
           "tags": {
               "displayName": "[variables('appPlanName')]"
           },
           "properties": {
               "name": "[variables('appPlanName')]"
           }
       },
       {      "type": "Microsoft.Insights/autoscalesettings",
      "name": "[variables('appPlanSettings')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]"
      ],
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultAutoscaleProfile",
            "capacity": {
              "minimum": "[parameters('minimumCapacity')]",
              "maximum": "[parameters('maximumCapacity')]",
              "default": "[parameters('defaultCapacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('metricThresholdToScaleOut')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleOut')]",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": "[parameters('metricThresholdToScaleIn')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleIn')]",
                  "cooldown": "PT10M"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('autoscaleEnabled')]",
        "targetResourceUri": "[variables('targetResourceId')]"
      }
        
        }


        
    ],
    "outputs": {}
}